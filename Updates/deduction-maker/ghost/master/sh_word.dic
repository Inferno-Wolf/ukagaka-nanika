//---------------------------Envelopes--------------------------
//keeper of words and the random

//%(filetype)
filetype
{
	".mp3"; ".mp4"; ".png"; ".jpg"; ".jpeg"; ".psd"; ".bmp"; ".gif"; ".wav"; ".ogg"; ".wma"; ".au"; ".clip"; ".dic"; ".txt"; ".sai"; ".odt"; ".doc"; ".docx"; ".sai2"; ".zip"; ".nar"; ".7z"; ".art"; ".chr"; ".dll"; ".json"; ".rtf"; ".ttf"; ".wpd"; ".flac"; ".iso"
}

//%(userfolder)
userfolder
{
	"Recycling Bin"
	"Documents Folder"
	"Secrets Folder"
	"Ghosts Folder"
	"Great Exhibition Folder"
	"Great Exhibition's Bin"
	"%(user) Folder"
	"Downloads Folder"
	"Pictures Folder"
	"Music Folder"
}

//%(fairfood)
fairfood
{
	"cotton candy"
	"shaved ice"
	"funnel cake"
	"crystal candy"
	"oysters"
	"eel pies"
	"fish and chips"
	"pease soup"
	"rice milk"
	"steamed chestnuts"
	"crepes"
	"churros"
	"donuts"
}



	//*********************Advanced User Info*******************************
	  //One particularly useful thing you can do is add value changes to an envelope, if your dialogue is in a place where it's not easy to add the change directly. For example...
	  
	  //FeelingsGoUp
	  //{
	  //Feelings += 1
	  //"Thank you, %(username), that was really nice of you.\e"
	  //}
	  
	  //So this would display the dialogue as well as change the value. Then you can call this in dialogue if you need to to change the value without having to do a bunch of fiddly business. You can change multiple values at once, and if you don't put dialogue in there, it will change the value invisibly.
	  
	  //Another use for these envelopes is to shortcut certain long lines of SakuraScript you don't want to have to keep typing.

	//Another way to use envelopes is to store multiple poses for SurfaceRestore in aitalk.dic. This can be an easy way to vary certain poses without having to manually put them in one at a time, and have some variety when your ghost goes back to its neutral pose in SurfaceRestore.
		
	  //***********************************************************************




//I've called it a double envelope at times, but this is actually technically an array. Note that it has a word, a comma, then another word. This is essentially a list being stored in this envelope. You can call one of the values by using brackets around the number of the list entry. So, the first value (the Korean word) would be %(lessonkor[0]) since all arrays start at 0. The second value (the definition) would be %(lessonkor[1]). If you have a longer array, like "word,word,word,word,word", you can keep calling values by changing the numbers, like %(lessonkor[5]) or %(lessonkor[10]). An example of pulling information from this array can be seen in aitalk.dic.

lessonkor
{
	"사과(sa-gua),apple"
	"노동(no-dong),labor"
	"손가락(son-ga-rak),finger"
	"마르크스(ma-r-k-s),Marx"
	"자본주의(ja-bon-ju-yi),capitalism"
}



//random numbers
numb
{
	_rand = RAND(1000)
	_rand += 10
	--
	"%(_rand)"
}

//Herlock incorrect months
Hermonth //%(Hermonth)
{
	if month == 1
	{
		"March"
	}
	elseif month == 2
	{
		"April"
	}
	elseif month == 3
	{
		"May"
	}
	elseif month == 4
	{
		"June"
	}
	elseif month == 5
	{
		"July"
	}
	elseif month == 6
	{
		"August"
	}
	elseif month == 7
	{
		"September"
	}
	elseif month == 8
	{
		"October"
	}
	elseif month == 9
	{
		"November"
	}
	elseif month == 10
	{
		"December"
	}
	elseif month == 11
	{
		"January"
	}
	else //month == 12
	{
		"February"
	}
}



//This is figuring out what day of the week it is.
GetWeekDay
{
	if weekday == 0
	{"Sun"}
	elseif weekday == 1
	{"Mon"}
	elseif weekday == 2
	{"Tue"}
	elseif weekday == 3
	{"Wed"}
	elseif weekday == 4
	{"Thu"}
	elseif weekday == 5
	{"Fri"}
	else
	{"Sat"}
}

//This is finding out whether it's AM or PM.
GetAP
{
 	if hour >= 0 && hour <= 11
 		{"AM"}
 	else
 		{"PM"}
}

nowhour
{
	if hour12 == 0; "1"
	else; "%(hour12)"
}

nowmin
{
	if minute >= 0 && minute <=9; "0%(minute)"
	else; "%(minute)"
}

// wd = GetWeekDay
// ap = GetAP
// %(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)


//**** Don't touch this ***************************************************************
//This is code stuff and nothing for you to worry about, just save the .dic and move on! You're done!

On_\person
{
 	person
}